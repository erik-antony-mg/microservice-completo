spring.application.name=service-factura


#nombre de la instancia que aparecera en el servidor de eureka
#eureka.instance.instance-id=${spring.application.name}:${server.port}

#para el config server que perfil tomar
spring.cloud.config.profile=dev
#para conectar nuestro proyecto al servidor de configuracion
spring.config.import=optional:configserver:http://localhost:8888



#config.webclient.customer.url=http://localhost:8086
#config.webclient.customer.url=http://SERVICE-CUSTOMER
#config.webclient.product.url=http://SERVICE-PRODUCT
config.webclient.customer.url=${config.webclient.customer.url}
config.webclient.product.url=${config.webclient.product.url}

#para registrar el circuit breaker en actuator
#management.endpoints.web.exposure.include=health
#management.health.circuitbreakers.enabled=true
#management.endpoint.health.show-details=always
#resilience4j.circuitbreaker.instances.customerService.register-health-indicator=true
#resilience4j.circuitbreaker.instances.productService.register-health-indicator=true

#para la configuracion de circuitbreaker
#resilience4j.circuitbreaker.instances.customerService.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.customerService.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.customerService.slidingWindowType=TIME_BASED
#resilience4j.circuitbreaker.instances.customerService.minimumNumberOfCalls=3
#resilience4j.circuitbreaker.instances.customerService.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.customerService.failureRateThreshold=5
#resilience4j.circuitbreaker.instances.customerService.eventConsumerBufferSize=10


#
#server.port=8087
#spring.datasource.url=jdbc:postgresql://localhost:5432/factura_bd
#spring.datasource.username=postgres
#spring.datasource.password=root
#
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.format_sql=true